CHIP P2S {
    IN indata[4], enable, load;
    OUT sout, complete;

    PARTS:
    // 4-bit register to store the input data
    Register(in=indata, load=load, out=storedData);

    // 2-bit counter to track the current bit position (0 to 3)
    Counter(increment=enable, reset=load, out=bitPos);

    // Multiplexer to select the appropriate bit from the stored data
    Mux4Way16(
        a=storedData[0],   // Bit 0
        b=storedData[1],   // Bit 1
        c=storedData[2],   // Bit 2
        d=storedData[3],   // Bit 3
        sel=bitPos,        // Selection signal from the counter
        out=sout);         // Serial output

    // Logic for the complete signal
    Or(a=bitPos[1], b=bitPos[0], out=allBitsTransmitted);
    And(a=enable, b=allBitsTransmitted, out=complete);
}