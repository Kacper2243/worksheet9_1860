CHIP P2S {
    IN indata[4], enable, load;
    OUT sout, complete;
    
    PARTS:
    // Registers to store the input data
    Register(in=indata[0], load=load, out=d0);
    Register(in=indata[1], load=load, out=d1);
    Register(in=indata[2], load=load, out=d2);
    Register(in=indata[3], load=load, out=d3);

    // Counter to keep track of the bit being output
    Counter(in=true, load=false, inc=enable, reset=load, out=counterOut);

    // Multiplexer to select the correct bit to output
    Mux4Way16(a=d0, b=d1, c=d2, d=d3, sel=counterOut[1..0], out=muxOut);

    // Register to hold the output bit
    Register(in=muxOut[0], load=enable, out=sout);

    // Logic to set the complete signal
    And(a=enable, b=counterOut[2], out=completeSignal);
    Register(in=completeSignal, load=enable, out=complete);
}
